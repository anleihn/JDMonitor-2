一、安装青龙面板
1.安装青龙依赖
docker run -dit \
-v $PWD/ql-redis/config:/ql/config \
-v $PWD/ql-redis/log:/ql/log \
-v $PWD/ql-redis/db:/ql/db \
-v $PWD/ql-redis/repo:/ql/repo \
-v $PWD/ql-redis/raw:/ql/raw \
-v $PWD/ql-redis/scripts:/ql/scripts \
-v $PWD/ql-redis/jbot:/ql/jbot \
-v $PWD/ql-redis/ninja:/ql/ninja \
-p 39001:5700 \
-p 39002:5701 \
--name qinglong-redis \
--hostname ql-redis \
--restart unless-stopped \
--privileged \
whyour/qinglong:2.11.3

## --privileged 必须的参数，否则redis安装不上


2.进入青龙面板
docker exec -it qinglong-redis bash

二、安装Redis
1.安装redis所需要的依赖
apk add --update gcc automake autoconf libtool make --no-cache g++ libxslt-dev python3-dev openssl-dev linux-headers

注意：
fatal error: jemalloc/jemalloc.h: No such file or directory
make distclean && make

fatal error: linux/version.h: No such file or directory
apk add linux-headers

2.安装redis
mkdir redis
cd redis 
wget http://download.redis.io/releases/redis-4.0.2.tar.gz
tar xzf redis-4.0.2.tar.gz
cd redis-4.0.2
make
make install

3.运行redis
cd /usr/local/bin
##甲骨文路径为 /ql/redis/redis-4.0.2/src
./redis-server
## 运行成功后
## 后台运行redis
ctrl+z
bg 1

三、安装pkc依赖（同样在容器内部）
1.安装依赖
# 操作环境，容器内执行。
# 包依赖
apk add zlib zlib-dev libjpeg-turbo libjpeg-turbo-dev gcc python3-dev libffi-dev musl-dev linux-headers

# 模块依赖
pip3 install qrcode==7.3.1 Telethon==1.24.0 requests==2.27.1 Pillow==9.0.0 python-socks==1.2.4 async_timeout==4.0.2 prettytable==3.0.0

# 如果安装 Pillow 比较慢 执行以下命令，然后再执行上面命令
pip install -i https://pypi.tuna.tsinghua.edu.cn/simple Pillow==9.0.0

2.拉取jbot主要代码
cd /ql/repo && git clone https://github.com/curtinlv/gd.git
cp -a /ql/repo/gd/* /ql/jbot && cp -a /ql/jbot/conf/* /ql/config 
cp -a /ql/jbot/jk_script/* /ql/scripts
mkdir /ql/log/bot

3.配置tg机器人参数配置 (可在青龙面板-配置文件中配置)
vi /ql/config/bot.json
vi /ql/config/diybotset.json

4.启动机器人
# 删除历史登录session
rm -f /ql/config/user.session

# 通过pm2 后台启动，除了登录验证外，建议使用pm2启动机器人
cd /ql/jbot/
pm2 start ecosystem.config.js #第一次启动是这样启动，后续启动参考底部相关命令

# 查看日志：看看有没有报错。
tail -100f /ql/log/bot/run.log

# tg机器人会叮咚
# 向机器人发送 /user 进行登录



四、redis的关键代码

const redis = require('redis')
const redisClient = redis.createClient({
        url: 'redis://127.0.0.1:6379' 
        /* 
        * redis://[[username][:password]@][host][:port][/db-number]
        * 写密码redis://:123456@127.0.0.1:6379/0 
        * 写用户redis://uername@127.0.0.1:6379/0  
        * 或者不写密码 redis://127.0.0.1:6379/0
        * 或者不写db_number redis://:127.0.0.1:6379
        * */
    });
!(async () => {
    
    redisClient.on('ready', () => {
        console.log('redis is ready...')
    })

    redisClient.on('error', err => {
        console.log(err)
    
    })

    await redisClient.connect()
    /* 增 改*/
    const status = await redisClient.set('key1', '123') // 设置值
    console.log(status )

    /* 查 */
    const value = await redisClient.get('key1') // 得到value 没有则为null
    console.log(value )

    /* 删 */
    const num = await redisClient.del('key') // 0 没有key关键字 // 1删除成功
    console.log(num )

})()
    .catch((e) => $.logErr(e))
    .finally(() => $.done()
	     redisClient.quit() )
	
五、青龙面板脚本依赖
png-js
date-fns
axios
dotenv
got
crypto-js
md5
ts-md5
tslib
@types/node
request
tough-cookie
jsdom
download
tunnel
ws
js-base64
qrcode-terminal
moment
redis
